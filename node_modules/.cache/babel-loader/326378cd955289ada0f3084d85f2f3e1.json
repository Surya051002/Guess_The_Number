{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\work\\\\Desktop\\\\matrimony\\\\src\\\\Screen\\\\Guesnum.js\",\n    _s = $RefreshSig$();\n\nimport Main from \"./Main\";\nimport { useState } from \"react\";\nimport React from \"react\";\nimport ReactDOM from 'react-dom/client';\nimport Results from \"./Results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Restart = () => {\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 14\n  }, this));\n};\n\n_c = Restart;\nexport default function Guesnum(props) {\n  _s();\n\n  let ran = props.ran;\n  const [list, addlist] = useState([]);\n  const [str, addstr] = useState(\"\");\n  const [va, setva] = useState(0);\n  const [result, setresult] = useState(\"\");\n  const [col, setcolor] = useState(\"green\");\n\n  const Check = props => {\n    let ran = props.ran;\n\n    const handle = event => {\n      setva(event.target.value);\n    };\n\n    let usergues = document.getElementById(\"inp1\").value;\n    document.getElementById(\"inp1\").value = \"\";\n    usergues = parseInt(usergues);\n    console.log(ran);\n\n    if (usergues === ran) {\n      setcolor(\"green\");\n      setresult(\"you are correct\");\n      addstr(`${usergues} correct`);\n      addlist([str, ...list]);\n    } else if (ran < usergues) {\n      setcolor(\"red\");\n      setresult(\"your gues is too high\");\n      addstr(`${usergues} Wrong`);\n      addlist([str, ...list]);\n    } else {\n      setcolor(\"red\");\n      setresult(\"your gues is too low\");\n      addstr(`${usergues} Wrong`);\n      addlist([str, ...list]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"in\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handle,\n        className: \"input\",\n        id: \"inp1\",\n        type: \"text\",\n        placeholder: \"Gues Number From 1 to 100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          backgroundColor: col\n        },\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Check(ran = {\n          ran\n        }),\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Restart(),\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }, this), list.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            backgroundColor: col\n          },\n          children: str\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guesnum, \"NMud7iCJA+4JZtBri3UHfw50UQI=\");\n\n_c2 = Guesnum;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Restart\");\n$RefreshReg$(_c2, \"Guesnum\");","map":{"version":3,"names":["Main","useState","React","ReactDOM","Results","Restart","root","createRoot","document","getElementById","render","Guesnum","props","ran","list","addlist","str","addstr","va","setva","result","setresult","col","setcolor","Check","handle","event","target","value","usergues","parseInt","console","log","backgroundColor","map"],"sources":["C:/Users/work/Desktop/matrimony/src/Screen/Guesnum.js"],"sourcesContent":["import Main from \"./Main\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport Results from \"./Results\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Restart=()=>{\r\n    const root = ReactDOM.createRoot(document.getElementById('root'));\r\n            root.render(\r\n             <React.StrictMode>\r\n               <Main/>\r\n             </React.StrictMode>\r\n    );\r\n }\r\n \r\n \r\n \r\n \r\n \r\n export default function Guesnum(props){\r\n   \r\n    let ran=props.ran;\r\n    const[list,addlist]=useState([]);\r\n    const[str,addstr]=useState(\"\");\r\n    const[va,setva]=useState(0);\r\n    const [result,setresult]=useState(\"\");\r\n    const [col,setcolor]=useState(\"green\");\r\n    const Check=(props)=>{\r\n    \r\n    let ran=props.ran;\r\n    const handle=(event)=>{\r\nsetva(event.target.value);\r\n\r\n    }\r\n    let usergues=document.getElementById(\"inp1\").value;\r\n    document.getElementById(\"inp1\").value=\"\";\r\n    usergues=parseInt(usergues);\r\n    console.log(ran);\r\n    if(usergues===ran){\r\n        setcolor(\"green\");\r\n        setresult(\"you are correct\");\r\n        addstr(`${usergues} correct`);\r\n        addlist([str,...list]);\r\n        \r\n    }\r\n    else if(ran<usergues){\r\n        setcolor(\"red\");\r\n        setresult(\"your gues is too high\");\r\n        addstr(`${usergues} Wrong`);\r\n        addlist([str,...list]);\r\n    }\r\n    else{\r\n        setcolor(\"red\");\r\n        setresult(\"your gues is too low\");\r\n        addstr(`${usergues} Wrong`);\r\n        addlist([str,...list]);\r\n    \r\n    }\r\n    }\r\n\r\n    return(\r\n    <div>\r\n        <div className=\"in\">\r\n           <input onChange={handle} className=\"input\" id=\"inp1\" type=\"text\" placeholder=\"Gues Number From 1 to 100\"/>\r\n           <br/>\r\n           <h1 style={{backgroundColor:col}}>{result}</h1>\r\n           <br/>\r\n           <br/>\r\n           <button  onClick={()=>Check(ran={ran})}>Check</button>\r\n           <br></br><br/>\r\n           <button onClick={()=>Restart()}>Restart</button>\r\n           <br/>\r\n           <br/>\r\n           {list.map((list)=>{\r\n            return <h1 style={{backgroundColor:col}}>{str}</h1>\r\n           })}\r\n        </div>\r\n    </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}